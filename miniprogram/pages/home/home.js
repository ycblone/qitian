"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_service_1 = require("../../services/request-service");
const authen_service_1 = require("../../services/authen-service");
Page({
    data: {
        scrollHeight: '',
        background: [
            "../../img/swiperA.jpg",
            "../../img/swiperB.jpg",
            "../../img/swiperC.jpg"
        ],
        indicatorDots: true,
        vertical: false,
        autoplay: false,
        interval: 2000,
        duration: 500,
        indexImg: 0,
        option: [],
        optionShow: '',
        labelBoxIsNull: true,
        itemTitle: '行业',
        onlineSession: '',
        isHistory: '',
        isMyCollected: '',
    },
    onLoad: function () {
        let that = this;
        for (let i = 0; i < that.data.option.length; i++) {
            var option = "option[" + i + "].isSelect";
            that.setData({
                [option]: false
            });
        }
        this.getBarImg();
        this.getOnlineSession();
        this.getAllBusiness();
    },
    onReady: function () {
        const that = this;
        that.computeScrollViewHeight();
    },
    onShow: function () {
        if (typeof this.getTabBar === 'function' &&
            this.getTabBar()) {
            this.getTabBar().setData({
                selected: 0
            });
        }
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
    },
    getBarImg() {
        request_service_1.requestService.get('onlinePresentationsBanners/', {})
            .then(res => {
            console.log('轮播', res);
        });
    },
    getOnlineSession() {
        const that = this;
        request_service_1.requestService.get('onlinePresentations/', {}).then(res => {
            for (let i = 0; i < res.data.data.length; i++) {
                res.data.data[i].updateDate = this.timeHandle(res.data.data[i].updateDate);
            }
            that.setData({
                onlineSession: res.data.data
            });
        });
    },
    timeHandle(dateTime) {
        let date = dateTime.split(' ')[0];
        let time = dateTime.split(' ')[1];
        let dateNew = date.split('-')[1] + '-' + date.split('-')[2];
        let timeNew = time.split(':')[0] + ':' + time.split(':')[1];
        return (dateNew + ' ' + timeNew);
    },
    indexChange(event) {
        let that = this;
        console.log(event);
        var index = event.detail.current;
        that.setData({
            indexImg: index
        });
    },
    searchInput(e) {
        const that = this;
        that.getAllBusiness(e.detail.value);
        const business = e.detail.value;
        request_service_1.requestService.get('onlinePresentations/keyword/', { business }, {}, true, true)
            .then(res => {
            that.setData({
                onlineSession: res.data.data
            });
        });
    },
    searchIsNull(e) {
        const that = this;
        if (!e.detail.value) {
            that.getOnlineSession();
        }
    },
    clickLabel(event) {
        const that = this;
        console.log(event.currentTarget.dataset.info);
        const info = event.currentTarget.dataset.info;
        let isSelect = that.data.option[info].isSelect;
        var option = "option[" + info + "].isSelect";
        if (!isSelect) {
            var selected = "option[" + that.data.optionShow + "].isSelect";
            that.setData({
                [option]: !isSelect
            });
            if (that.data.optionShow !== '') {
                that.setData({
                    [selected]: !that.data.option[that.data.optionShow].isSelect
                });
            }
            that.setData({
                optionShow: info
            });
        }
        else {
            that.setData({
                [option]: !isSelect,
                optionShow: ''
            });
        }
        let isNull = true;
        if (that.data.optionShow === '') {
            isNull = true;
            that.getOnlineSession();
        }
        else {
            isNull = false;
            that.getAllBusiness(that.data.option[that.data.optionShow].name);
        }
        that.setData({
            labelBoxIsNull: isNull
        });
    },
    getAllBusiness(business) {
        const that = this;
        if (business) {
            request_service_1.requestService.get('onlinePresentations/business/', { business }, {}, true, true)
                .then(res => {
                that.setData({
                    onlineSession: res.data.data
                });
            });
        }
        else {
            request_service_1.requestService.get('onlinePresentations/business/', {})
                .then(res => {
                that.setData({
                    option: res.data.data
                });
            });
        }
    },
    isHistory() {
        const that = this;
        if (that.data.isHistory == '') {
            that.setData({
                isHistory: true
            });
        }
        else {
            that.setData({
                isHistory: !that.data.isHistory
            });
        }
    },
    isMyCollect() {
        const that = this;
        const business = authen_service_1.authenService.getUserId();
        if (that.data.isMyCollected) {
            that.setData({
                isMyCollected: !that.data.isMyCollected
            });
            request_service_1.requestService.get('onlinePresentations/', {})
                .then(res => {
                that.setData({
                    onlineSession: res.data.data
                });
            });
        }
        else {
            that.setData({
                isMyCollected: true
            });
            request_service_1.requestService.get("collect/onlinePresentations/user/", { business }, {}, true, true)
                .then(res => {
                that.setData({
                    onlineSession: res.data.data
                });
            });
        }
    },
    computeScrollViewHeight() {
        const that = this;
        let query = wx.createSelectorQuery();
        query.select('.swiper-wrap').boundingClientRect();
        query.select('.contentHead').boundingClientRect();
        query.exec(res => {
            let swiperHeight = res[0].height;
            let headHeight = res[1].height;
            let windowHeight = wx.getSystemInfoSync().windowHeight;
            let scrollHeight = windowHeight - swiperHeight - headHeight - 50;
            that.setData({
                scrollHeight: scrollHeight
            });
        });
    },
    toCloud(e) {
        const that = this;
        let info = e.currentTarget.dataset.info;
        let data = that.data.onlineSession[info];
        const sendData = JSON.stringify(data);
        wx.navigateTo({
            url: '../cloud/cloud?data=' + sendData
        });
    }
});
//# sourceMappingURL=data:application/json;base64,