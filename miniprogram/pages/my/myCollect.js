"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_service_1 = require("../../services/request-service");
Page({
    data: {
        activeName: ["1"],
        onlineClass: '',
        tempJob: '',
        myCompany: '',
    },
    onLoad: function () {
        this.getMyCollect();
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
    },
    onChange(event) {
        this.setData({
            activeName: event.detail
        });
    },
    getMyCollect() {
        const that = this;
        const business = '2';
        request_service_1.requestService.get('collect/onlinePresentations/user/', { business }, {}, true, true)
            .then(res => {
            that.setData({
                onlineClass: res.data.data
            });
        });
        request_service_1.requestService.get('collect/internshipCollect/user/', { business }, {}, true, true)
            .then(res => {
            that.setData({
                tempJob: res.data.data
            });
        });
        request_service_1.requestService.get('collect/companyCollect/user/', { business }, {}, true, true)
            .then(res => {
            that.setData({
                myCompany: res.data.data
            });
        });
    },
    toCompany() {
        const companyData = JSON.stringify(this.data.myCompany);
        wx.navigateTo({
            url: '../selectMeeting/jobMore?data=' + companyData
        });
    },
    toTempJob() {
        const jobData = JSON.stringify(this.data.tempJob);
        wx.navigateTo({
            url: '../findJob/practiceMore?data=' + jobData
        });
    },
    toOnlineClass() {
        const classData = JSON.stringify(this.data.onlineClass);
        wx.navigateTo({
            url: '../cloud/cloud?data=' + this.data.onlineClass
        });
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXlDb2xsZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibXlDb2xsZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0Esb0VBQThEO0FBRzlELElBQUksQ0FBQztJQUtILElBQUksRUFBRTtRQUNGLFVBQVUsRUFBQyxDQUFDLEdBQUcsQ0FBQztRQUNoQixXQUFXLEVBQUMsRUFBRTtRQUNkLE9BQU8sRUFBQyxFQUFFO1FBQ1YsU0FBUyxFQUFDLEVBQUU7S0FDZjtJQUtELE1BQU0sRUFBRTtRQUNOLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBS0QsT0FBTyxFQUFFO0lBRVQsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFLRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBS0QsUUFBUSxFQUFFO0lBRVYsQ0FBQztJQUtELGlCQUFpQixFQUFFO0lBRW5CLENBQUM7SUFLRCxhQUFhLEVBQUU7SUFFZixDQUFDO0lBS0QsaUJBQWlCLEVBQUU7SUFFbkIsQ0FBQztJQUVDLFFBQVEsQ0FBQyxLQUFTO1FBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULFVBQVUsRUFBRSxLQUFLLENBQUMsTUFBTTtTQUMzQixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsWUFBWTtRQUNaLE1BQU0sSUFBSSxHQUFHLElBQVcsQ0FBQztRQUV6QixNQUFNLFFBQVEsR0FBRyxHQUFHLENBQUM7UUFDbkIsZ0NBQWMsQ0FBQyxHQUFHLENBQUMsbUNBQW1DLEVBQUMsRUFBQyxRQUFRLEVBQUMsRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFDLElBQUksQ0FBQzthQUMxRSxJQUFJLENBQUMsR0FBRyxDQUFBLEVBQUU7WUFDUixJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNULFdBQVcsRUFBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUk7YUFDNUIsQ0FBQyxDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUE7UUFDSixnQ0FBYyxDQUFDLEdBQUcsQ0FBQyxpQ0FBaUMsRUFBQyxFQUFDLFFBQVEsRUFBQyxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUMsSUFBSSxDQUFDO2FBQ3hFLElBQUksQ0FBQyxHQUFHLENBQUEsRUFBRTtZQUNQLElBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQ1QsT0FBTyxFQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSTthQUN4QixDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQTtRQUNOLGdDQUFjLENBQUMsR0FBRyxDQUFDLDhCQUE4QixFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUMsRUFBRSxFQUFDLElBQUksRUFBQyxJQUFJLENBQUM7YUFDckUsSUFBSSxDQUFDLEdBQUcsQ0FBQSxFQUFFO1lBQ1AsSUFBSSxDQUFDLE9BQU8sQ0FBQztnQkFDVCxTQUFTLEVBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJO2FBQzFCLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFBO0lBQ1YsQ0FBQztJQUNELFNBQVM7UUFDTCxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUQsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUNWLEdBQUcsRUFBQyxnQ0FBZ0MsR0FBQyxXQUFXO1NBQ25ELENBQUMsQ0FBQTtJQUNGLENBQUM7SUFDRCxTQUFTO1FBQ0wsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2xELEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDVixHQUFHLEVBQUMsK0JBQStCLEdBQUMsT0FBTztTQUM5QyxDQUFDLENBQUE7SUFDTixDQUFDO0lBQ0QsYUFBYTtRQUNULE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN4RCxFQUFFLENBQUMsVUFBVSxDQUFDO1lBQ1YsR0FBRyxFQUFDLHNCQUFzQixHQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVztTQUNuRCxDQUFDLENBQUE7SUFDTixDQUFDO0NBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbWluaXByb2dyYW0vcGFnZXMvbXkvbXlDb2xsZWN0LmpzXG5pbXBvcnQge3JlcXVlc3RTZXJ2aWNlfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvcmVxdWVzdC1zZXJ2aWNlXCI7XG5pbXBvcnQge2F1dGhlblNlcnZpY2V9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9hdXRoZW4tc2VydmljZVwiO1xuXG5QYWdlKHtcblxuICAvKipcbiAgICog6aG16Z2i55qE5Yid5aeL5pWw5o2uXG4gICAqL1xuICBkYXRhOiB7XG4gICAgICBhY3RpdmVOYW1lOltcIjFcIl0sXG4gICAgICBvbmxpbmVDbGFzczonJyxcbiAgICAgIHRlbXBKb2I6JycsXG4gICAgICBteUNvbXBhbnk6JycsXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Yqg6L29XG4gICAqL1xuICBvbkxvYWQ6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmdldE15Q29sbGVjdCgpO1xuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWIneasoea4suafk+WujOaIkFxuICAgKi9cbiAgb25SZWFkeTogZnVuY3Rpb24gKCkge1xuXG4gIH0sXG5cbiAgLyoqXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5pi+56S6XG4gICAqL1xuICBvblNob3c6IGZ1bmN0aW9uICgpIHtcblxuICB9LFxuXG4gIC8qKlxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdoumakOiXj1xuICAgKi9cbiAgb25IaWRlOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLljbjovb1cbiAgICovXG4gIG9uVW5sb2FkOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog6aG16Z2i55u45YWz5LqL5Lu25aSE55CG5Ye95pWwLS3nm5HlkKznlKjmiLfkuIvmi4nliqjkvZxcbiAgICovXG4gIG9uUHVsbERvd25SZWZyZXNoOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog6aG16Z2i5LiK5ouJ6Kem5bqV5LqL5Lu255qE5aSE55CG5Ye95pWwXG4gICAqL1xuICBvblJlYWNoQm90dG9tOiBmdW5jdGlvbiAoKSB7XG5cbiAgfSxcblxuICAvKipcbiAgICog55So5oi354K55Ye75Y+z5LiK6KeS5YiG5LqrXG4gICAqL1xuICBvblNoYXJlQXBwTWVzc2FnZTogZnVuY3Rpb24gKCk6YW55IHtcblxuICB9LFxuICAgIC8vIOaJi+mjjueQtOWIh+aNolxuICAgIG9uQ2hhbmdlKGV2ZW50OmFueSl7XG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICBhY3RpdmVOYW1lOiBldmVudC5kZXRhaWxcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICAvLyDojrflj5bmiJHnmoTkuInkuKrmlLbol49cbiAgICBnZXRNeUNvbGxlY3QoKXtcbiAgICBjb25zdCB0aGF0ID0gdGhpcyBhcyBhbnk7XG4gICAgLy8gY29uc3QgYnVzaW5lc3MgPSBhdXRoZW5TZXJ2aWNlLmdldFVzZXJJZCgpO1xuICAgIGNvbnN0IGJ1c2luZXNzID0gJzInO1xuICAgICAgcmVxdWVzdFNlcnZpY2UuZ2V0KCdjb2xsZWN0L29ubGluZVByZXNlbnRhdGlvbnMvdXNlci8nLHtidXNpbmVzc30se30sdHJ1ZSx0cnVlKVxuICAgICAgICAgIC50aGVuKHJlcz0+e1xuICAgICAgICAgICAgIHRoYXQuc2V0RGF0YSh7XG4gICAgICAgICAgICAgICAgIG9ubGluZUNsYXNzOnJlcy5kYXRhLmRhdGFcbiAgICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KVxuICAgICAgICByZXF1ZXN0U2VydmljZS5nZXQoJ2NvbGxlY3QvaW50ZXJuc2hpcENvbGxlY3QvdXNlci8nLHtidXNpbmVzc30se30sdHJ1ZSx0cnVlKVxuICAgICAgICAgICAgLnRoZW4ocmVzPT57XG4gICAgICAgICAgICAgICAgdGhhdC5zZXREYXRhKHtcbiAgICAgICAgICAgICAgICAgICAgdGVtcEpvYjpyZXMuZGF0YS5kYXRhXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICByZXF1ZXN0U2VydmljZS5nZXQoJ2NvbGxlY3QvY29tcGFueUNvbGxlY3QvdXNlci8nLHtidXNpbmVzc30se30sdHJ1ZSx0cnVlKVxuICAgICAgICAgICAgLnRoZW4ocmVzPT57XG4gICAgICAgICAgICAgICAgdGhhdC5zZXREYXRhKHtcbiAgICAgICAgICAgICAgICAgICAgbXlDb21wYW55OnJlcy5kYXRhLmRhdGFcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pXG4gICAgfSxcbiAgICB0b0NvbXBhbnkoKXtcbiAgICAgICAgY29uc3QgY29tcGFueURhdGEgPSBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEubXlDb21wYW55KTtcbiAgICB3eC5uYXZpZ2F0ZVRvKHtcbiAgICAgICAgdXJsOicuLi9zZWxlY3RNZWV0aW5nL2pvYk1vcmU/ZGF0YT0nK2NvbXBhbnlEYXRhXG4gICAgfSlcbiAgICB9LFxuICAgIHRvVGVtcEpvYigpe1xuICAgICAgICBjb25zdCBqb2JEYXRhID0gSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhLnRlbXBKb2IpO1xuICAgICAgICB3eC5uYXZpZ2F0ZVRvKHtcbiAgICAgICAgICAgIHVybDonLi4vZmluZEpvYi9wcmFjdGljZU1vcmU/ZGF0YT0nK2pvYkRhdGFcbiAgICAgICAgfSlcbiAgICB9LFxuICAgIHRvT25saW5lQ2xhc3MoKXtcbiAgICAgICAgY29uc3QgY2xhc3NEYXRhID0gSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhLm9ubGluZUNsYXNzKTtcbiAgICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgICAgICB1cmw6Jy4uL2Nsb3VkL2Nsb3VkP2RhdGE9Jyt0aGlzLmRhdGEub25saW5lQ2xhc3NcbiAgICAgICAgfSlcbiAgICB9LFxufSkiXX0=