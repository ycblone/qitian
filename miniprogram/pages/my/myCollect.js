"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_service_1 = require("../../services/request-service");
Page({
    data: {
        activeName: ["1"],
        onlineClass: '',
        tempJob: '',
        myCompany: '',
    },
    onLoad: function () {
        this.getMyCollect();
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
    },
    onChange(event) {
        this.setData({
            activeName: event.detail
        });
    },
    getMyCollect() {
        const that = this;
        const business = '2';
        request_service_1.requestService.get('collect/onlinePresentations/user/', { business }, {}, true, true)
            .then(res => {
            that.setData({
                onlineClass: res.data.data
            });
        });
        request_service_1.requestService.get('collect/internshipCollect/user/', { business }, {}, true, true)
            .then(res => {
            that.setData({
                tempJob: res.data.data
            });
        });
        request_service_1.requestService.get('collect/companyCollect/user/', { business }, {}, true, true)
            .then(res => {
            that.setData({
                myCompany: res.data.data
            });
        });
    },
    toCompany() {
        const companyData = JSON.stringify(this.data.myCompany);
        wx.navigateTo({
            url: '../selectMeeting/jobMore?data=' + companyData
        });
    },
    toTempJob() {
        const jobData = JSON.stringify(this.data.tempJob);
        wx.navigateTo({
            url: '../findJob/practiceMore?data=' + jobData
        });
    },
    toOnlineClass() {
        const classData = JSON.stringify(this.data.onlineClass);
        wx.navigateTo({
            url: '../cloud/cloud?data=' + this.data.onlineClass
        });
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXlDb2xsZWN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibXlDb2xsZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0Esb0VBQThEO0FBRzlELElBQUksQ0FBQztJQUtILElBQUksRUFBRTtRQUNGLFVBQVUsRUFBQyxDQUFDLEdBQUcsQ0FBQztRQUNoQixXQUFXLEVBQUMsRUFBRTtRQUNkLE9BQU8sRUFBQyxFQUFFO1FBQ1YsU0FBUyxFQUFDLEVBQUU7S0FDZjtJQUtELE1BQU0sRUFBRTtRQUNOLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBS0QsT0FBTyxFQUFFO0lBRVQsQ0FBQztJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFLRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBS0QsUUFBUSxFQUFFO0lBRVYsQ0FBQztJQUtELGlCQUFpQixFQUFFO0lBRW5CLENBQUM7SUFLRCxhQUFhLEVBQUU7SUFFZixDQUFDO0lBS0QsaUJBQWlCLEVBQUU7SUFFbkIsQ0FBQztJQUVDLFFBQVEsQ0FBQyxLQUFTO1FBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULFVBQVUsRUFBRSxLQUFLLENBQUMsTUFBTTtTQUMzQixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsWUFBWTtRQUNaLE1BQU0sSUFBSSxHQUFHLElBQVcsQ0FBQztRQUV6QixNQUFNLFFBQVEsR0FBRyxHQUFHLENBQUM7UUFDbkIsZ0NBQWMsQ0FBQyxHQUFHLENBQUMsbUNBQW1DLEVBQUMsRUFBQyxRQUFRLEVBQUMsRUFBQyxFQUFFLEVBQUMsSUFBSSxFQUFDLElBQUksQ0FBQzthQUMxRSxJQUFJLENBQUMsR0FBRyxDQUFBLEVBQUU7WUFDUixJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNULFdBQVcsRUFBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUk7YUFDNUIsQ0FBQyxDQUFDO1FBQ04sQ0FBQyxDQUFDLENBQUE7UUFDSixnQ0FBYyxDQUFDLEdBQUcsQ0FBQyxpQ0FBaUMsRUFBQyxFQUFDLFFBQVEsRUFBQyxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUMsSUFBSSxDQUFDO2FBQ3hFLElBQUksQ0FBQyxHQUFHLENBQUEsRUFBRTtZQUNQLElBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQ1QsT0FBTyxFQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSTthQUN4QixDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQTtRQUNOLGdDQUFjLENBQUMsR0FBRyxDQUFDLDhCQUE4QixFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUMsRUFBRSxFQUFDLElBQUksRUFBQyxJQUFJLENBQUM7YUFDckUsSUFBSSxDQUFDLEdBQUcsQ0FBQSxFQUFFO1lBQ1AsSUFBSSxDQUFDLE9BQU8sQ0FBQztnQkFDVCxTQUFTLEVBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJO2FBQzFCLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFBO0lBQ1YsQ0FBQztJQUNELFNBQVM7UUFDTCxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUQsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUNWLEdBQUcsRUFBQyxnQ0FBZ0MsR0FBQyxXQUFXO1NBQ25ELENBQUMsQ0FBQTtJQUNGLENBQUM7SUFDRCxTQUFTO1FBQ0wsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2xELEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDVixHQUFHLEVBQUMsK0JBQStCLEdBQUMsT0FBTztTQUM5QyxDQUFDLENBQUE7SUFDTixDQUFDO0lBQ0QsYUFBYTtRQUNULE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN4RCxFQUFFLENBQUMsVUFBVSxDQUFDO1lBQ1YsR0FBRyxFQUFDLHNCQUFzQixHQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVztTQUNuRCxDQUFDLENBQUE7SUFDTixDQUFDO0NBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLy8gbWluaXByb2dyYW0vcGFnZXMvbXkvbXlDb2xsZWN0LmpzXHJcbmltcG9ydCB7cmVxdWVzdFNlcnZpY2V9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9yZXF1ZXN0LXNlcnZpY2VcIjtcclxuaW1wb3J0IHthdXRoZW5TZXJ2aWNlfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvYXV0aGVuLXNlcnZpY2VcIjtcclxuXHJcblBhZ2Uoe1xyXG5cclxuICAvKipcclxuICAgKiDpobXpnaLnmoTliJ3lp4vmlbDmja5cclxuICAgKi9cclxuICBkYXRhOiB7XHJcbiAgICAgIGFjdGl2ZU5hbWU6W1wiMVwiXSxcclxuICAgICAgb25saW5lQ2xhc3M6JycsXHJcbiAgICAgIHRlbXBKb2I6JycsXHJcbiAgICAgIG15Q29tcGFueTonJyxcclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWKoOi9vVxyXG4gICAqL1xyXG4gIG9uTG9hZDogZnVuY3Rpb24gKCkge1xyXG4gICAgdGhpcy5nZXRNeUNvbGxlY3QoKTtcclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWIneasoea4suafk+WujOaIkFxyXG4gICAqL1xyXG4gIG9uUmVhZHk6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgfSxcclxuXHJcbiAgLyoqXHJcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLmmL7npLpcclxuICAgKi9cclxuICBvblNob3c6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgfSxcclxuXHJcbiAgLyoqXHJcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLpmpDol49cclxuICAgKi9cclxuICBvbkhpZGU6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgfSxcclxuXHJcbiAgLyoqXHJcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLljbjovb1cclxuICAgKi9cclxuICBvblVubG9hZDogZnVuY3Rpb24gKCkge1xyXG5cclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDpobXpnaLnm7jlhbPkuovku7blpITnkIblh73mlbAtLeebkeWQrOeUqOaIt+S4i+aLieWKqOS9nFxyXG4gICAqL1xyXG4gIG9uUHVsbERvd25SZWZyZXNoOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gIH0sXHJcblxyXG4gIC8qKlxyXG4gICAqIOmhtemdouS4iuaLieinpuW6leS6i+S7tueahOWkhOeQhuWHveaVsFxyXG4gICAqL1xyXG4gIG9uUmVhY2hCb3R0b206IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgfSxcclxuXHJcbiAgLyoqXHJcbiAgICog55So5oi354K55Ye75Y+z5LiK6KeS5YiG5LqrXHJcbiAgICovXHJcbiAgb25TaGFyZUFwcE1lc3NhZ2U6IGZ1bmN0aW9uICgpOmFueSB7XHJcblxyXG4gIH0sXHJcbiAgICAvLyDmiYvpo47nkLTliIfmjaJcclxuICAgIG9uQ2hhbmdlKGV2ZW50OmFueSl7XHJcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcclxuICAgICAgICAgICAgYWN0aXZlTmFtZTogZXZlbnQuZGV0YWlsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgLy8g6I635Y+W5oiR55qE5LiJ5Liq5pS26JePXHJcbiAgICBnZXRNeUNvbGxlY3QoKXtcclxuICAgIGNvbnN0IHRoYXQgPSB0aGlzIGFzIGFueTtcclxuICAgIC8vIGNvbnN0IGJ1c2luZXNzID0gYXV0aGVuU2VydmljZS5nZXRVc2VySWQoKTtcclxuICAgIGNvbnN0IGJ1c2luZXNzID0gJzInO1xyXG4gICAgICByZXF1ZXN0U2VydmljZS5nZXQoJ2NvbGxlY3Qvb25saW5lUHJlc2VudGF0aW9ucy91c2VyLycse2J1c2luZXNzfSx7fSx0cnVlLHRydWUpXHJcbiAgICAgICAgICAudGhlbihyZXM9PntcclxuICAgICAgICAgICAgIHRoYXQuc2V0RGF0YSh7XHJcbiAgICAgICAgICAgICAgICAgb25saW5lQ2xhc3M6cmVzLmRhdGEuZGF0YVxyXG4gICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgIHJlcXVlc3RTZXJ2aWNlLmdldCgnY29sbGVjdC9pbnRlcm5zaGlwQ29sbGVjdC91c2VyLycse2J1c2luZXNzfSx7fSx0cnVlLHRydWUpXHJcbiAgICAgICAgICAgIC50aGVuKHJlcz0+e1xyXG4gICAgICAgICAgICAgICAgdGhhdC5zZXREYXRhKHtcclxuICAgICAgICAgICAgICAgICAgICB0ZW1wSm9iOnJlcy5kYXRhLmRhdGFcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIHJlcXVlc3RTZXJ2aWNlLmdldCgnY29sbGVjdC9jb21wYW55Q29sbGVjdC91c2VyLycse2J1c2luZXNzfSx7fSx0cnVlLHRydWUpXHJcbiAgICAgICAgICAgIC50aGVuKHJlcz0+e1xyXG4gICAgICAgICAgICAgICAgdGhhdC5zZXREYXRhKHtcclxuICAgICAgICAgICAgICAgICAgICBteUNvbXBhbnk6cmVzLmRhdGEuZGF0YVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgdG9Db21wYW55KCl7XHJcbiAgICAgICAgY29uc3QgY29tcGFueURhdGEgPSBKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEubXlDb21wYW55KTtcclxuICAgIHd4Lm5hdmlnYXRlVG8oe1xyXG4gICAgICAgIHVybDonLi4vc2VsZWN0TWVldGluZy9qb2JNb3JlP2RhdGE9Jytjb21wYW55RGF0YVxyXG4gICAgfSlcclxuICAgIH0sXHJcbiAgICB0b1RlbXBKb2IoKXtcclxuICAgICAgICBjb25zdCBqb2JEYXRhID0gSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhLnRlbXBKb2IpO1xyXG4gICAgICAgIHd4Lm5hdmlnYXRlVG8oe1xyXG4gICAgICAgICAgICB1cmw6Jy4uL2ZpbmRKb2IvcHJhY3RpY2VNb3JlP2RhdGE9Jytqb2JEYXRhXHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICB0b09ubGluZUNsYXNzKCl7XHJcbiAgICAgICAgY29uc3QgY2xhc3NEYXRhID0gSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhLm9ubGluZUNsYXNzKTtcclxuICAgICAgICB3eC5uYXZpZ2F0ZVRvKHtcclxuICAgICAgICAgICAgdXJsOicuLi9jbG91ZC9jbG91ZD9kYXRhPScrdGhpcy5kYXRhLm9ubGluZUNsYXNzXHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbn0pIl19