"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_service_1 = require("../../services/request-service");
const authen_service_1 = require("../../services/authen-service");
var app = getApp();
Page({
    data: {
        userInfo: {},
        hasUserInfo: false,
    },
    onLoad: function () {
    },
    onReady: function () {
    },
    onShow: function () {
        if (typeof this.getTabBar === 'function' &&
            this.getTabBar()) {
            this.getTabBar().setData({
                selected: 3
            });
        }
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
    },
    login() {
        const that = this;
        wx.login({
            success(res) {
                console.log("code", res.code);
                app.globalData.code = res.code;
                console.log("codeGLO", app.globalData.code);
                if (res.code) {
                    const business = app.globalData.code;
                    request_service_1.requestService.get('wx/code2Session/', { business }, {}, true, true)
                        .then((e) => {
                        console.log("登录成功", e);
                        console.log("token", e.data.data.token);
                        authen_service_1.authenService.saveToken(e.data.data.token);
                        authen_service_1.authenService.saveUserId(e.data.data.user.id);
                    });
                }
                else {
                    console.log('登录失败！' + res.errMsg);
                }
            }
        });
    },
    getUserInfo(e) {
        console.log(e);
        app.globalData.userInfo = e.detail.userInfo;
        if (e.detail.userInfo) {
            this.setData({
                userInfo: e.detail.userInfo,
                hasUserInfo: true,
            });
            this.recordUserInfo();
        }
    },
    recordUserInfo() {
        request_service_1.requestService.post('user/', {
            id: authen_service_1.authenService.getUserId(),
            nickName: app.globalData.userInfo.nickName,
            openid: '',
            session_key: '',
            unionid: ''
        }).then(res => {
            console.log("后台注册", res);
        });
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJteS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLG9FQUE4RDtBQUM5RCxrRUFBNEQ7QUFDNUQsSUFBSSxHQUFHLEdBQU8sTUFBTSxFQUFPLENBQUM7QUFDNUIsSUFBSSxDQUFDO0lBS0gsSUFBSSxFQUFFO1FBQ0YsUUFBUSxFQUFFLEVBQUU7UUFDWixXQUFXLEVBQUUsS0FBSztLQUNyQjtJQUtELE1BQU0sRUFBRTtJQUVSLENBQUM7SUFLRCxPQUFPLEVBQUU7SUFFVCxDQUFDO0lBS0QsTUFBTSxFQUFFO1FBQ0osSUFBSSxPQUFPLElBQUksQ0FBQyxTQUFTLEtBQUssVUFBVTtZQUNwQyxJQUFJLENBQUMsU0FBUyxFQUFFLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDLE9BQU8sQ0FBQztnQkFDckIsUUFBUSxFQUFFLENBQUM7YUFDZCxDQUFDLENBQUE7U0FDTDtJQUNMLENBQUM7SUFLRCxNQUFNLEVBQUU7SUFFUixDQUFDO0lBS0QsUUFBUSxFQUFFO0lBRVYsQ0FBQztJQUtELGlCQUFpQixFQUFFO0lBRW5CLENBQUM7SUFLRCxhQUFhLEVBQUU7SUFFZixDQUFDO0lBS0QsaUJBQWlCLEVBQUU7SUFFbkIsQ0FBQztJQUNDLEtBQUs7UUFDTCxNQUFNLElBQUksR0FBRyxJQUFXLENBQUM7UUFDckIsRUFBRSxDQUFDLEtBQUssQ0FBQztZQUNMLE9BQU8sQ0FBRSxHQUFPO2dCQUNaLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDN0IsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEdBQUMsR0FBRyxDQUFDLElBQUksQ0FBQztnQkFDN0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDM0MsSUFBSSxHQUFHLENBQUMsSUFBSSxFQUFFO29CQUVWLE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDO29CQUNyQyxnQ0FBYyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxFQUFDLFFBQVEsRUFBQyxFQUFDLEVBQUUsRUFBQyxJQUFJLEVBQUMsSUFBSSxDQUFDO3lCQUMxRCxJQUFJLENBQUMsQ0FBQyxDQUFLLEVBQUMsRUFBRTt3QkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBQyxDQUFDLENBQUMsQ0FBQzt3QkFDdEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBRXZDLDhCQUFhLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO3dCQUMzQyw4QkFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7b0JBRWxELENBQUMsQ0FBQyxDQUFDO2lCQUVOO3FCQUFNO29CQUNILE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQTtpQkFDcEM7WUFDTCxDQUFDO1NBQ0osQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELFdBQVcsQ0FBQyxDQUFNO1FBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNmLEdBQUcsQ0FBQyxVQUFVLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO1FBQzVDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDbkIsSUFBSSxDQUFDLE9BQU8sQ0FBQztnQkFDVCxRQUFRLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRO2dCQUMzQixXQUFXLEVBQUUsSUFBSTthQUNwQixDQUFDLENBQUE7WUFDRixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7U0FDekI7SUFFTCxDQUFDO0lBRUQsY0FBYztRQUNaLGdDQUFjLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBQztZQUN4QixFQUFFLEVBQUMsOEJBQWEsQ0FBQyxTQUFTLEVBQUU7WUFDNUIsUUFBUSxFQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLFFBQVE7WUFDekMsTUFBTSxFQUFDLEVBQUU7WUFDVCxXQUFXLEVBQUMsRUFBRTtZQUNkLE9BQU8sRUFBQyxFQUFFO1NBQ2IsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUEsRUFBRTtZQUNULE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzVCLENBQUMsQ0FBQyxDQUFBO0lBQ0osQ0FBQztDQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8vIG1pbmlwcm9ncmFtL3BhZ2VzL215L215LmpzXHJcbmltcG9ydCB7cmVxdWVzdFNlcnZpY2V9IGZyb20gXCIuLi8uLi9zZXJ2aWNlcy9yZXF1ZXN0LXNlcnZpY2VcIjtcclxuaW1wb3J0IHthdXRoZW5TZXJ2aWNlfSBmcm9tIFwiLi4vLi4vc2VydmljZXMvYXV0aGVuLXNlcnZpY2VcIjtcclxudmFyIGFwcDphbnkgPSBnZXRBcHA8YW55PigpO1xyXG5QYWdlKHtcclxuXHJcbiAgLyoqXHJcbiAgICog6aG16Z2i55qE5Yid5aeL5pWw5o2uXHJcbiAgICovXHJcbiAgZGF0YToge1xyXG4gICAgICB1c2VySW5mbzoge30sXHJcbiAgICAgIGhhc1VzZXJJbmZvOiBmYWxzZSxcclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWKoOi9vVxyXG4gICAqL1xyXG4gIG9uTG9hZDogZnVuY3Rpb24gKCkge1xyXG5cclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDnlJ/lkb3lkajmnJ/lh73mlbAtLeebkeWQrOmhtemdouWIneasoea4suafk+WujOaIkFxyXG4gICAqL1xyXG4gIG9uUmVhZHk6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgfSxcclxuXHJcbiAgLyoqXHJcbiAgICog55Sf5ZG95ZGo5pyf5Ye95pWwLS3nm5HlkKzpobXpnaLmmL7npLpcclxuICAgKi9cclxuICBvblNob3c6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgaWYgKHR5cGVvZiB0aGlzLmdldFRhYkJhciA9PT0gJ2Z1bmN0aW9uJyAmJlxyXG4gICAgICAgICAgdGhpcy5nZXRUYWJCYXIoKSkge1xyXG4gICAgICAgICAgdGhpcy5nZXRUYWJCYXIoKS5zZXREYXRhKHtcclxuICAgICAgICAgICAgICBzZWxlY3RlZDogM1xyXG4gICAgICAgICAgfSlcclxuICAgICAgfVxyXG4gIH0sXHJcblxyXG4gIC8qKlxyXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i6ZqQ6JePXHJcbiAgICovXHJcbiAgb25IaWRlOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gIH0sXHJcblxyXG4gIC8qKlxyXG4gICAqIOeUn+WRveWRqOacn+WHveaVsC0t55uR5ZCs6aG16Z2i5Y246L29XHJcbiAgICovXHJcbiAgb25VbmxvYWQ6IGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgfSxcclxuXHJcbiAgLyoqXHJcbiAgICog6aG16Z2i55u45YWz5LqL5Lu25aSE55CG5Ye95pWwLS3nm5HlkKznlKjmiLfkuIvmi4nliqjkvZxcclxuICAgKi9cclxuICBvblB1bGxEb3duUmVmcmVzaDogZnVuY3Rpb24gKCkge1xyXG5cclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiDpobXpnaLkuIrmi4nop6blupXkuovku7bnmoTlpITnkIblh73mlbBcclxuICAgKi9cclxuICBvblJlYWNoQm90dG9tOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gIH0sXHJcblxyXG4gIC8qKlxyXG4gICAqIOeUqOaIt+eCueWHu+WPs+S4iuinkuWIhuS6q1xyXG4gICAqL1xyXG4gIG9uU2hhcmVBcHBNZXNzYWdlOiBmdW5jdGlvbiAoKTphbnkge1xyXG5cclxuICB9LFxyXG4gICAgbG9naW4oKXtcclxuICAgIGNvbnN0IHRoYXQgPSB0aGlzIGFzIGFueTtcclxuICAgICAgICB3eC5sb2dpbih7XHJcbiAgICAgICAgICAgIHN1Y2Nlc3MgKHJlczphbnkpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiY29kZVwiLHJlcy5jb2RlKTtcclxuICAgICAgICAgICAgICAgIGFwcC5nbG9iYWxEYXRhLmNvZGU9cmVzLmNvZGU7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImNvZGVHTE9cIixhcHAuZ2xvYmFsRGF0YS5jb2RlKTtcclxuICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8v5Y+R6LW3572R57uc6K+35rGCXHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYnVzaW5lc3MgPSBhcHAuZ2xvYmFsRGF0YS5jb2RlO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlcXVlc3RTZXJ2aWNlLmdldCgnd3gvY29kZTJTZXNzaW9uLycsIHtidXNpbmVzc30se30sdHJ1ZSx0cnVlKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAudGhlbigoZTphbnkpPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi55m75b2V5oiQ5YqfXCIsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidG9rZW5cIixlLmRhdGEuZGF0YS50b2tlbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOW8leeUqOiHquWumuS5ieeahGF1dGhlblNlcnZpY2XmnI3liqHkv53lrZh0b2tlbiDlkowgdXNlcklkXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGF1dGhlblNlcnZpY2Uuc2F2ZVRva2VuKGUuZGF0YS5kYXRhLnRva2VuKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0aGVuU2VydmljZS5zYXZlVXNlcklkKGUuZGF0YS5kYXRhLnVzZXIuaWQpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfnmbvlvZXlpLHotKXvvIEnICsgcmVzLmVyck1zZylcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgLy8g6I635Y+W55So5oi35L+h5oGvXHJcbiAgICBnZXRVc2VySW5mbyhlOiBhbnkpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlKTtcclxuICAgICAgICBhcHAuZ2xvYmFsRGF0YS51c2VySW5mbyA9IGUuZGV0YWlsLnVzZXJJbmZvO1xyXG4gICAgICAgIGlmIChlLmRldGFpbC51c2VySW5mbykge1xyXG4gICAgICAgICAgICB0aGlzLnNldERhdGEoe1xyXG4gICAgICAgICAgICAgICAgdXNlckluZm86IGUuZGV0YWlsLnVzZXJJbmZvLFxyXG4gICAgICAgICAgICAgICAgaGFzVXNlckluZm86IHRydWUsXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIHRoaXMucmVjb3JkVXNlckluZm8oKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfSxcclxuICAgIC8vIOiOt+WPluWIsOeUqOaIt+S/oeaBr+WQju+8jOaLv+WFtuS4reeahOS/oeaBr+i/lOWbnue7meWQjuWPsO+8jOiusOW9leeUqOaIt+S/oeaBr1xyXG4gICAgcmVjb3JkVXNlckluZm8oKXtcclxuICAgICAgcmVxdWVzdFNlcnZpY2UucG9zdCgndXNlci8nLHtcclxuICAgICAgICAgIGlkOmF1dGhlblNlcnZpY2UuZ2V0VXNlcklkKCksXHJcbiAgICAgICAgICBuaWNrTmFtZTphcHAuZ2xvYmFsRGF0YS51c2VySW5mby5uaWNrTmFtZSxcclxuICAgICAgICAgIG9wZW5pZDonJyxcclxuICAgICAgICAgIHNlc3Npb25fa2V5OicnLFxyXG4gICAgICAgICAgdW5pb25pZDonJ1xyXG4gICAgICB9KS50aGVuKHJlcz0+e1xyXG4gICAgICAgICAgY29uc29sZS5sb2coXCLlkI7lj7Dms6jlhoxcIixyZXMpO1xyXG4gICAgICB9KVxyXG4gICAgfSxcclxufSkiXX0=