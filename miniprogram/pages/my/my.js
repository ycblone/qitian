"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const request_service_1 = require("../../services/request-service");
const authen_service_1 = require("../../services/authen-service");
var app = getApp();
Page({
    data: {
        userInfo: {},
        hasUserInfo: false,
    },
    onLoad: function () {
        if (authen_service_1.authenService.getUserInfo()) {
            this.setData({
                userInfo: authen_service_1.authenService.getUserInfo(),
                hasUserInfo: true,
            });
        }
    },
    onReady: function () {
    },
    onShow: function () {
        if (typeof this.getTabBar === 'function' &&
            this.getTabBar()) {
            this.getTabBar().setData({
                selected: 3
            });
        }
    },
    onHide: function () {
    },
    onUnload: function () {
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function () {
    },
    login() {
        const that = this;
        wx.login({
            success(res) {
                console.log("code", res.code);
                app.globalData.code = res.code;
                console.log("codeGLO", app.globalData.code);
                if (res.code) {
                    const business = app.globalData.code;
                    request_service_1.requestService.get('wx/code2Session/', { business }, {}, true, true)
                        .then((e) => {
                        console.log("登录成功", e);
                        console.log("token", e.data.data.token);
                        authen_service_1.authenService.saveToken(e.data.data.token);
                        authen_service_1.authenService.saveUserId(e.data.data.user.id);
                    });
                }
                else {
                    console.log('登录失败！' + res.errMsg);
                }
            }
        });
    },
    getUserInfo(e) {
        console.log(e);
        app.globalData.userInfo = e.detail.userInfo;
        authen_service_1.authenService.saveUserInfo(e.detail.userInfo);
        if (e.detail.userInfo) {
            this.setData({
                userInfo: e.detail.userInfo,
                hasUserInfo: true,
            });
            this.recordUserInfo();
        }
    },
    recordUserInfo() {
        request_service_1.requestService.post('user/', {
            id: authen_service_1.authenService.getUserId(),
            nickName: app.globalData.userInfo.nickName,
            openid: '',
            session_key: '',
            unionid: ''
        }).then(res => {
            console.log("后台注册", res);
        });
    },
    toMyCollect() {
        wx.navigateTo({
            url: 'myCollect'
        });
    },
});
//# sourceMappingURL=data:application/json;base64,